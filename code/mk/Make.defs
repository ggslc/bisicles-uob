#-*- Mode: Makefile -*- 
BISICLES_MAKEFILES += Make.defs

# a bunch of common defs for the various BISICLES make files
MACHINE := $(shell uname)
UNAMEM := $(shell uname -m)
UNAMEN := $(shell uname -n)
WHO := $(shell whoami)
THIS_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))

# default BISICLES_HOME and CHOMBO_HOME if not defined
ifeq ($(BISICLES_HOME),)
BISICLES_HOME := $(THIS_DIR)/../../../
endif
ifeq ($(BISICLES_BRANCH),)
BISICLES_BRANCH := $(THIS_DIR)/../../
endif

ifeq ($(CHOMBO_HOME),)
CHOMBO_HOME := $(BISICLES_HOME)/Chombo/lib
endif

include $(CHOMBO_HOME)/mk/Make.defs
include $(CHOMBO_HOME)/mk/Make.defs.config

DIM=2
LibNames := AMRElliptic AMRTimeDependent AMRTools BoxTools BaseTools

#Bisicles: lib
XTRACPPFLAGS=-I$(THIS_DIR)/../src -I$(THIS_DIR)/../util
include $(CHOMBO_HOME)/mk/Make.example

#see if there is a host specific file.
HOST_DEFS := $(THIS_DIR)/Make.defs.$(UNAMEN)

#NERSC_HOST is more useful than UNAMEN on NERSC hosts....
ifneq ($(NERSC_HOST),)
HOST_DEFS := $(THIS_DIR)/Make.defs.$(NERSC_HOST)
endif

$(info HOST_DEFS=$(HOST_DEFS))
ifneq ($(wildcard $(HOST_DEFS)), )
$(info including $(HOST_DEFS) )
include $(HOST_DEFS)
else
NONE_DEFS=$(THIS_DIR)/Make.defs.none
$(info NONE_DEFS=$(NONE_DEFS))
ifneq ($(wildcard $(NONE_DEFS)), )
$(info including $(NONE_DEFS) )
include $(NONE_DEFS)
endif
endif




#if PYTHON_INC was not defined, warn
ifeq ($(PYTHON_INC),)
$(info python will not be enabled)
endif

$(info python: $(PYTHON_INC) $(PYTHON_LIBS) )
ifneq ($(PYTHON_INC),)
CPPFLAGS :=$(PYTHON_INC) -DHAVE_PYTHON	$(CPPFLAGS)
LIBFLAGS+=$(PYTHON_LIBS) 
endif

#check FFTWDIR
ifeq ($(USE_FFTW),TRUE)
$(info FFTWDIR=$(FFTWDIR))
ifeq ($(wildcard $(FFTWDIR)/include/fftw3.h),)
$(error $(FFTWDIR)/include/fftw3.h does not exist)
endif
endif


SVN_URL := unknown
SVN_REP := unknown
SVN_REV := unknown

ifneq ($(shell which svn),)

SVN_REV=$(shell cd $(BISICLES_BRANCH) ; svnversion -n)

ifeq ($(SVN_REV),Unversioned directory)

SVN_REV := unknown
SVN_URL := unknown
SVN_REP := unknown

else

SVN_REP := $(shell cd $(BISICLES_BRANCH) ; svn info | awk '/Repository Root:/ {print $$3}')
SVN_URL := $(shell cd $(BISICLES_BRANCH) ; svn info | awk '/^URL:/ {print $$2}')

endif
endif

CPPFLAGS += -DSVN_REV='"$(SVN_REV)"'
CPPFLAGS += -DSVN_REP='"$(SVN_REP)"'
CPPFLAGS += -DSVN_URL='"$(SVN_URL)"'


GIT_HASH := unknown
GIT_REMOTE := unknown

ifneq ($(shell which git),)
GIT_HASH := $(shell cd $(BISICLES_BRANCH) ; git describe --always)
GIT_REMOTE := $(shell git ls-remote --get-url)
endif

CPPFLAGS += -DGIT_HASH='"$(GIT_HASH)"'
CPPFLAGS += -DGIT_REMOTE='"$(GIT_REMOTE)"'


$(info CPPFLAGS = $(CPPFLAGS))

nolink: $(shell $(CHOMBO_HOME)/mk/reverse $(LibNames)) $(objects)  
	@echo BISICLES Objects built


